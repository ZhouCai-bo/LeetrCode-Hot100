class Solution {
public:
	int maximalRectangle(vector<vector<char>>& matrix){
        if(matrix.size()==0)
            return 0;
		vector<int> dp(matrix[0].size(), 0);
		int maxArea = 0;
		for (int i = 0; i < matrix.size(); i++)
		{
			for (int j = 0; j < matrix[0].size(); j++)
			{
				dp[j] = matrix[i][j] == '1' ? dp[j] + 1 : 0;
			}
			maxArea = max(maxArea, calcuLine(dp));
		}
		return maxArea;
	}

	int calcuLine(vector<int> v)
	{
		stack<int> st;
		int maxArea = 0;
		st.push(-1);
		int i = 0;
		for (; i < v.size(); i++)
		{
			while (st.top() != -1 && v[i] <= v[st.top()])
			{
				int top = st.top();
				st.pop();
				maxArea = max(v[top] * (i - st.top() - 1), maxArea);
			}
			st.push(i);
		}
		while (st.top() != -1)
		{
			int top = st.top();
			st.pop();
			maxArea = max(v[top] * (i - st.top() - 1), maxArea);
		}
		return maxArea;
	}
}; 
